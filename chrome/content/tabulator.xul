<?xml version="1.0"?>
<?xml-stylesheet href="chrome://tabulator/content/tabulator.css" type="text/css"?>
<!DOCTYPE overlay SYSTEM "chrome://tabulator/locale/en-US/tabulatorsidebar.dtd">

<overlay id="tabulator" 
         xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
  <script type="application/x-javascript" src="log-ext.js"/><!-- should be absolute path -->
  <script type="application/x-javascript" src="prefs.js"/>
  <script type="application/x-javascript" src="js/util.js"/>
  <script type="application/x-javascript" src="js/configuration.js"/>  
  <script type="application/x-javascript" src="js/rdf/sparql.js"/>
  <script type="application/x-javascript" src="js/uri.js"/>
  <script type="application/x-javascript" src="js/rdf/term.js"/>
  <script type="application/x-javascript" src="js/rdf/match.js"/>
  <script type="application/x-javascript" src="js/rdf/identity.js"/>
  <script type="application/x-javascript" src="js/rdf/rdfs.js"/>
  <script type="application/x-javascript" src="js/rdf/query.js"/>
  <script type="application/x-javascript" src="js/rdf/sources.js"/>
  <script type="application/x-javascript" src="js/rdf/serialize.js"/>
  <script type="application/x-javascript" src="outlineinit.js"/>
  <script type="application/x-javascript" src="js/userinput.js"/>
  <script type="application/x-javascript" src="js/sparqlUpdate.js"/>
  <script type="application/x-javascript" src="js/updateCenter.js"/>
  <script type="application/x-javascript" src="js/webdav.js"/>
  <script type="application/x-javascript" src="js/outline.js"/>
  <script type="application/x-javascript" src="sources-ext.js"/>
  <script type="application/x-javascript" src="test.js"/>
  
  <!-- panes -->
  <script type="application/x-javascript" src="js/panes/airPane.js"/>
  <script type="application/x-javascript" src="js/panes/LawPane.js"/>
  
  <!--<script type="application/x-javascript" src="searchbarOverlay.js"/>-->
  <menupopup id="viewSidebarMenu">
  <menuitem key="key_openTabulatorSidebar" observes="viewTabulatorSidebar"  />
  </menupopup>
  
  <keyset id="mainKeyset">
    <key id="key_openTabulatorSidebar" command="viewTabulatorSidebar"
         key="&openTabulatorSidebar.commandkey;" 
         modifiers="&openTabulatorSidebar.modifierskey;" />
  </keyset>
  
  <broadcasterset id="mainBroadcasterSet"> 
    <broadcaster id="viewTabulatorSidebar" 
                 label="&tabulatorsidebar.title;"
                 autoCheck="false"
                 type="checkbox"
                 group="sidebar"
                 sidebarurl="chrome://tabulator/content/tabulatorsidebar.xul"
                 sidebartitle="&tabulatorsidebar.title;"
                 oncommand="toggleSidebar('viewTabulatorSidebar');" />
  </broadcasterset>

  <menupopup id="menu_ToolsPopup">
    <menu id="menu_ToolsTabulatorMenu" label="&toolsTabulatorMenu.label;" accesskey="&toolsTabulatorMenu.accesskey;" insertafter="javascriptConsole">
      <menupopup id="menu_ToolsTabulatorPopup">
        <menuitem id="tabulator_setaccept" label="&tabulatorToggleHeader.label;" accesskey="&tabulatorToggleHeader.accesskey;" type="checkbox" oncommand="toggleSetHeader()"/>
      </menupopup>
    </menu>
    <menuitem label="&tablog.label;" accesskey="&tablog.accesskey;" insertafter="javascriptConsole" oncommand="openTool('chrome://tabulator/content/log.xul','tabulatorlog')"/>
  </menupopup>
  <menupopup id="menu_viewPopup">
        <menuitem label="&tabsources.label;" accesskey="&tabsources.accesskey;" insertbefore="fullScreenItem" oncommand="openTool('chrome://tabulator/content/sources.xul','tabulatorsources')"/>
        <menuitem label="&tabulatorPageMetadata.label;" insertbefore="fullScreenItem" oncommand="tabulatorShowMetadata(event)"/>
  </menupopup>

  <hbox id="urlbar-icons">
    <image id="tabulator-view-metadata" insertbefore="feed-button" onclick="tabulatorShowMetadata(event)"/>
  </hbox>
  
  <popupset id="mainPopupSet">
    <menupopup id="tabulatorcopyuri">
      <menuitem label="Copy URI" oncommand="tabulatorCopyURI()" />
      <menuitem label="Load in new tab" oncommand="tabulatorLoadStatusURI()" />
    </menupopup>
  </popupset>

  <statusbar id="status-bar">
    <statusbarpanel contextmenu="tabulatorcopyuri" id="tabulator-display" insertafter="statusbar-display" style="display:none"/>
    <statusbarpanel id="tabulator-source-count" insertbefore="statusbar-progresspanel" style="display:none"/>
  </statusbar>

  <script type="application/x-javascript"><![CDATA[
    var myCheckbox;
    tabulator_init = function() {
      myCheckbox = document.getElementById("tabulator_setaccept");
      var prefManager = Components.classes["@mozilla.org/preferences-service;1"]
                          .getService(Components.interfaces.nsIPrefBranch);
      try {
        var value = prefManager.getBoolPref("extensions.tabulator.setheader");
        if(value) {
          myCheckbox.setAttribute('checked','true');
        } else {
          myCheckbox.setAttribute('checked','false');
        }
      } catch(e) {
        prefManager.setBoolPref("extensions.tabulator.setheader",true);
        myCheckbox.setAttribute('checked',true);
      }

      var tabulatorDisplay = document.getElementById("tabulator-display");
      

      new StatusWidget();
    }
    
    function tabulatorDetectMetadata(){
        var kb = tabulator.kb;
        var semanticIcon = document.getElementById('tabulator-view-metadata');
        var divs = content.document.getElementsByTagName('div');
        if (divs.length && divs[0].className.search("TabulatorOutline")!=-1){
            //already viewing metadata, so disable the icon       
            semanticIcon.removeAttribute('metadata');
            return;
        }
        //also do this for HTML with hash uri...maybe don't do that
        var doc = kb.sym(content.document.location.href);
        var subjectIndex = kb.subjectIndex[doc.hashString()];
        var objectIndex = kb.objectIndex[doc.hashString()];
        //predicateIndex?? hmm...
        var semantics = (subjectIndex? subjectIndex.length:0) + (objectIndex?objectIndex.length:0);        
        //In the future, when there are many "semantics" of a page, we can show the icon based
        //on the amount of semantics
        if (semantics)
            semanticIcon.setAttribute('metadata', ''+semantics);
        else
            semanticIcon.removeAttribute('metadata');
    }        
    getBrowser().tabContainer.addEventListener("TabSelect", tabulatorDetectMetadata,true);    
    function tabulatorShowMetadata(e){
        canonizeUrl(e,{});
        tabulator.metadataURI = gURLBar.value;
        handleURLBarCommand(e);
    }
    
    function tabulatorCopyURI() {
        gClipboardHelper = Components.classes["@mozilla.org/widget/clipboardhelper;1"].
                                    getService(Components.interfaces.nsIClipboardHelper);
        gClipboardHelper.copyString(document.getElementById("tabulator-display").label);
    }

    function tabulatorLoadStatusURI() {
        var tabURIToLoad = document.getElementById("tabulator-display").label;
        gBrowser.selectedTab = gBrowser.addTab(tabURIToLoad);
    }

    function toggleSetHeader() {
      var checked = myCheckbox.getAttribute('checked');
      var prefManager = Components.classes["@mozilla.org/preferences-service;1"]
                          .getService(Components.interfaces.nsIPrefBranch);
        var prefManager = Components.classes["@mozilla.org/preferences-service;1"]
                            .getService(Components.interfaces.nsIPrefBranch);
        try {
          if(checked)
            prefManager.setBoolPref("extensions.tabulator.setheader",true);
          else
            prefManager.setBoolPref("extensions.tabulator.setheader",false);
        } catch(e) {
          alert("Error: Could not set the HTTP Accept header preference.\n       Please report error to http://dig.csail.mit.edu/issues/tabulator/");
        }
    }

    window.addEventListener("load",tabulator_init, false);

  ]]></script>
  <script type="application/x-javascript" src="statuswidget.js" ></script>
</overlay>
